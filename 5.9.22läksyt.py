

#1
def encrypt_it(word):
    alph = "abcdefghijklmnopqrstuvxyz ̊a ̈a ̈o"
    keyw = "uvxyz ̊a ̈a ̈oabcdefghijklmnopqrst"
    result = ""
    x=0
    while x<9:
        place_in_key = alph.find(word[x])
        x+=1
        result = result + keyw[place_in_key]
    return result

#2
print(decrypt_it(input("Give a string to be encrypted: ")))

def decrypt_it(word):
    alph = "abcdefghijklmnopqrstuvxyz ̊a ̈a ̈o"
    keyw = "uvxyz ̊a ̈a ̈oabcdefghijklmnopqrst"
    result = ""
    x=0
    while x<9:
        place_in_key = alph.find(word[x])
        x+=1
        result = result + keyw[place_in_key]
    return result

print(decrypt_it(input("Give a string to be encrypted: ")))

#3
# Returns a string that is generated by adding space between
# every character in sentence (but this version does not work yet and something needs to be changed
def as_spaced(sentence, space): 
    result = "En osaa ohjelmoida"
    for symbol in sentence[0:-1]:
        result = result + symbol
        ##
        ##
        return result
# This is just a test.
print(as_spaced("I REALLY NEED MORE SPACE", " "))
print(as_spaced("NO REST FOR THE WICKED"))

#4
str('cradle of filth')
str.capitalize()
# Tämän pitäisi laittaa merkkijonon eka kirjain isolla, mutta nytpä ei toimi

'01\t034\t35343'.expandtabs()
# Tämän pitäisi erotella luvut, mutta eipä nyt juuri toimi

n = 56
bin(n)
n.bit_count()
# En ole täysin varma mitä tän kuuluisi tehdä. Sekään ei kuitenkaan toimi.
# Yritin.